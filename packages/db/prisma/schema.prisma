generator client {
  provider = "prisma-client-js"
  output   = "../client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wallet {
  id                Int      @id @default(autoincrement())
  accountExternalId String   @unique
  balance           Float    @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

model TransactionType {
  id   Int    @id @default(autoincrement())
  name String

  transactions Transaction[]
}

model Transaction {
  id                      Int               @id @default(autoincrement())
  transactionExternalId   String            @unique
  accountExternalIdDebit  String
  accountExternalIdCredit String
  transactionTypeId       Int
  transactionType         TransactionType   @relation(fields: [transactionTypeId], references: [id])
  transactionStatus       TransactionStatus
  value                   Float
  createdAt               DateTime          @default(now())
  FraudFlag               FraudFlag?
}

enum FraudSeverity {
  LOW
  MEDIUM
  HIGH
}

model FraudFlag {
  id            Int           @id @default(autoincrement())
  transaction   Transaction   @relation(fields: [transactionId], references: [id])
  transactionId Int           @unique
  severity      FraudSeverity
  createdAt     DateTime      @default(now())
}
